package com.threadbase;

public class ThreadDeadLock implements Runnable{

	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
    class MyThread extends 	Thread{
    	private char[] source;
    	private char[] desk;
    	public MyThread(char[] source,char[] desk) {
    		this.source=source;
    		this.desk=desk;
    	}
    	public void run() {
    		// TODO Auto-generated method stub
    		System.out.println(this.getName()+"线程开始");
    		synchronized (source) {
    			try {
					Thread.sleep(100);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
    		synchronized (desk) {
				System.out.println("线程执行中.");
			}
    		}
    		System.out.println("线程结束.");
    	}
    }
    char[] c1= {'a','b','c','d'};
    char[] c2= {'1','2','3','4'};
    
    MyThread t1=new MyThread(c1, c2);
    MyThread t2=new MyThread(c2, c1);
    t1.start();
    t2.start();
	}

	@Override
	public void run() {
		// TODO Auto-generated method stub

	}

}
